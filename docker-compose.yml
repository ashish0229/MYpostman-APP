services:
  # PostgreSQL Database Service
  db:
    image: postgres:14-alpine
    container_name: mypostmate_db
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./Backend/database.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Node.js API Service
  backend:
    container_name: mypostmate_backend
    build:
      context: ./Backend
      dockerfile: Dockerfile
    restart: always
    env_file:
      - ./.env 
    ports:
      - "3001:3001"
    depends_on:
      db:
        condition: service_healthy
    command: npm run dev

  # Frontend React App Service
  frontend:
    container_name: mypostmate_frontend
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "5173:80"
    depends_on:
      - backend

volumes:
  postgres_data:

